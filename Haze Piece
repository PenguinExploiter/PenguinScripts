--Haze Piece, Credits to Penguin.

local HazePiece = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Title = Instance.new("Frame")
local Piece = Instance.new("TextLabel")
local UICorner_2 = Instance.new("UICorner")
local Haze = Instance.new("TextLabel")
local Drag = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local Theme = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local AutoChest = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local AutoFruit = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local AutoFarm = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")

--Properties:

HazePiece.Name = "HazePiece"
HazePiece.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
HazePiece.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = HazePiece
Main.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.240154445, 0, 0.117788464, 0)
Main.Size = UDim2.new(0, 673, 0, 635)

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = Main

Title.Name = "Title"
Title.Parent = Main
Title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
Title.BorderSizePixel = 0
Title.Size = UDim2.new(0, 673, 0, 153)

Piece.Name = "Piece"
Piece.Parent = Title
Piece.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Piece.BackgroundTransparency = 1.000
Piece.BorderColor3 = Color3.fromRGB(0, 0, 0)
Piece.BorderSizePixel = 0
Piece.Position = UDim2.new(0, 0, 0.414512873, 0)
Piece.Size = UDim2.new(0, 673, 0, 89)
Piece.Font = Enum.Font.Nunito
Piece.Text = "Piece"
Piece.TextColor3 = Color3.fromRGB(0, 255, 255)
Piece.TextScaled = true
Piece.TextSize = 14.000
Piece.TextWrapped = true

UICorner_2.CornerRadius = UDim.new(0, 20)
UICorner_2.Parent = Title

Haze.Name = "Haze"
Haze.Parent = Title
Haze.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Haze.BackgroundTransparency = 1.000
Haze.BorderColor3 = Color3.fromRGB(0, 0, 0)
Haze.BorderSizePixel = 0
Haze.Size = UDim2.new(0, 673, 0, 64)
Haze.Font = Enum.Font.Nunito
Haze.Text = "Haze"
Haze.TextColor3 = Color3.fromRGB(255, 255, 255)
Haze.TextScaled = true
Haze.TextSize = 14.000
Haze.TextWrapped = true

Drag.Name = "Drag"
Drag.Parent = Main
Drag.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Drag.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drag.BorderSizePixel = 0
Drag.Position = UDim2.new(0.074294202, 0, 0.264566928, 0)
Drag.Size = UDim2.new(0, 573, 0, 89)
Drag.Font = Enum.Font.Nunito
Drag.Text = "Drag = Smooth"
Drag.TextColor3 = Color3.fromRGB(255, 255, 255)
Drag.TextScaled = true
Drag.TextSize = 14.000
Drag.TextWrapped = true

UICorner_3.CornerRadius = UDim.new(0, 20)
UICorner_3.Parent = Drag

TextLabel.Parent = Main
TextLabel.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.386329859, 0, 0.927559078, 0)
TextLabel.Size = UDim2.new(0, 153, 0, 46)
TextLabel.Font = Enum.Font.Nunito
TextLabel.Text = "Click to Toggle"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

Theme.Name = "Theme"
Theme.Parent = Main
Theme.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Theme.BorderColor3 = Color3.fromRGB(0, 0, 0)
Theme.BorderSizePixel = 0
Theme.Position = UDim2.new(0.074294202, 0, 0.429921269, 0)
Theme.Size = UDim2.new(0, 573, 0, 89)
Theme.Font = Enum.Font.Nunito
Theme.Text = "Theme = Dark"
Theme.TextColor3 = Color3.fromRGB(255, 255, 255)
Theme.TextScaled = true
Theme.TextSize = 14.000
Theme.TextWrapped = true

UICorner_4.CornerRadius = UDim.new(0, 20)
UICorner_4.Parent = Theme

AutoChest.Name = "AutoChest"
AutoChest.Parent = Main
AutoChest.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
AutoChest.BorderColor3 = Color3.fromRGB(0, 0, 0)
AutoChest.BorderSizePixel = 0
AutoChest.Position = UDim2.new(0.074294202, 0, 0.596850395, 0)
AutoChest.Size = UDim2.new(0, 573, 0, 89)
AutoChest.Font = Enum.Font.Nunito
AutoChest.Text = "AutoChest = False"
AutoChest.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoChest.TextScaled = true
AutoChest.TextSize = 14.000
AutoChest.TextWrapped = true

UICorner_5.CornerRadius = UDim.new(0, 20)
UICorner_5.Parent = AutoChest

AutoFruit.Name = "AutoFruit"
AutoFruit.Parent = Main
AutoFruit.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
AutoFruit.BorderColor3 = Color3.fromRGB(0, 0, 0)
AutoFruit.BorderSizePixel = 0
AutoFruit.Position = UDim2.new(0.074294202, 0, 0.757480323, 0)
AutoFruit.Size = UDim2.new(0, 573, 0, 40)
AutoFruit.Font = Enum.Font.Nunito
AutoFruit.Text = "AutoFruit = False"
AutoFruit.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoFruit.TextScaled = true
AutoFruit.TextSize = 14.000
AutoFruit.TextWrapped = true

UICorner_6.CornerRadius = UDim.new(0, 20)
UICorner_6.Parent = AutoFruit

AutoFarm.Name = "AutoFarm"
AutoFarm.Parent = Main
AutoFarm.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
AutoFarm.BorderColor3 = Color3.fromRGB(0, 0, 0)
AutoFarm.BorderSizePixel = 0
AutoFarm.Position = UDim2.new(0.074294202, 0, 0.840944886, 0)
AutoFarm.Size = UDim2.new(0, 573, 0, 40)
AutoFarm.Font = Enum.Font.Nunito
AutoFarm.Text = "AutoFarm = False"
AutoFarm.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoFarm.TextScaled = true
AutoFarm.TextSize = 14.000
AutoFarm.TextWrapped = true

UICorner_7.CornerRadius = UDim.new(0, 20)
UICorner_7.Parent = AutoFarm

-- Scripts:

local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()

local function TPWGLJH_fake_script() -- Main.DragSpeed 
	local script = Instance.new('LocalScript', Main)

	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil

	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end

	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)

	while true do
		task.wait(0.1)
		if script.Parent.Drag.Text == "Drag = Smooth" then
			dragSpeed = 0.25
		elseif script.Parent.Drag.Text == "Drag = Linear" then
			dragSpeed = 0
		end
	end
end
coroutine.wrap(TPWGLJH_fake_script)()
local function NPKQ_fake_script() -- Main.Main 
	local script = Instance.new('LocalScript', Main)

	local function PlaySound()
		local Sound = Instance.new("Sound", script)
		Sound.Name = "Click"
		Sound.Volume = 1
		Sound.SoundId = "rbxassetid://8388724806"
		Sound:Play()
	end

	game.Players.LocalPlayer.PlayerGui.Platform.Value = "HazePiece | Exploit"

	script.Parent.Drag.Activated:Connect(function()
		PlaySound()

		--Drag
		if script.Parent.Drag.Text == "Drag = Smooth" then
			script.Parent.Drag.Text = "Drag = Linear"
		elseif script.Parent.Drag.Text == "Drag = Linear" then
			script.Parent.Drag.Text = "Drag = Smooth"
		end
	end)

	script.Parent.Theme.Activated:Connect(function()
		PlaySound()

		--Theme
		if script.Parent.Theme.Text == "Theme = Dark" then
			script.Parent.Theme.Text = "Theme = Light"
		elseif script.Parent.Theme.Text == "Theme = Light" then
			script.Parent.Theme.Text = "Theme = Dark"
		end
	end)

	script.Parent.AutoChest.Activated:Connect(function()
		PlaySound()

		--AutoChest
		if script.Parent.AutoChest.Text == "AutoChest = False" then
			script.Parent.AutoChest.Text = "AutoChest = True"
		elseif script.Parent.AutoChest.Text == "AutoChest = True" then
			script.Parent.AutoChest.Text = "AutoChest = False"
		end
	end)

	script.Parent.AutoFruit.Activated:Connect(function()
		PlaySound()

		--AutoFruit
		if script.Parent.AutoFruit.Text == "AutoFruit = False" then
			script.Parent.AutoFruit.Text = "AutoFruit = True"
		elseif script.Parent.AutoFruit.Text == "AutoFruit = True" then
			script.Parent.AutoFruit.Text = "AutoFruit = False"
		end
	end)

	script.Parent.AutoFarm.Activated:Connect(function()
		PlaySound()

		if script.Parent.AutoFarm.Text == "AutoFarm = False" then
			script.Parent.AutoFarm.Text = "AutoFarm = True"
		elseif script.Parent.AutoFarm.Text == "AutoFarm = True" then
			script.Parent.AutoFarm.Text = "AutoFarm = False"
		end
	end)

	while true do
		task.wait()

		--Drag = script.Parent.DragSpeed

		--Theme
		if script.Parent.Theme.Text == "Theme = Dark" then
			for i,v in pairs(script.Parent:GetChildren()) do
				if v:IsA("TextButton") then
					v.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				end
			end

			script.Parent.TextLabel.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
			script.Parent.Title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			script.Parent.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

		elseif script.Parent.Theme.Text == "Theme = Light" then
			for i,v in pairs(script.Parent:GetChildren()) do
				if v:IsA("TextButton") then
					v.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
				end
			end

			script.Parent.TextLabel.BackgroundColor3 = Color3.fromRGB(125, 125, 125)
			script.Parent.Title.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
			script.Parent.BackgroundColor3 = Color3.fromRGB(175, 175, 175)
		end

		--AutoChest
		if script.Parent.AutoChest.Text == "AutoChest = True" then
			for i,v in pairs(workspace:GetChildren()) do
				if v.Name == "Chest" and v:IsA("Model") then
					if v:FindFirstChild("Hitbox") then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild("Hitbox").CFrame
						local ProximityPrompt = v:FindFirstChild("Hitbox").ProximityPrompt
						ProximityPrompt.HoldDuration = 0
						fireproximityprompt(ProximityPrompt)
					else
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Logic.SpawnLocations:FindFirstChildWhichIsA("SpawnLocation").CFrame * CFrame.new(0,5,0)
					end
				end
			end
		end

		--AutoFruit
		if script.Parent.AutoFruit.Text == "AutoFruit = True" then
			for i,v in pairs(workspace.Logic.FruitDrops:GetChildren()) do
				if v:IsA("Folder") then
					if v:FindFirstChildWhichIsA("Tool"):FindFirstChild("Handle") then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChildWhichIsA("Tool").Handle.CFrame
						local ProximityPrompt = v:FindFirstChildWhichIsA("Tool").Handle.ProximityPrompt
						ProximityPrompt.HoldDuration = 0
						fireproximityprompt(ProximityPrompt)
					else
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Logic.SpawnLocations:FindFirstChildWhichIsA("SpawnLocation").CFrame * CFrame.new(0,5,0)
					end
				end
			end

		end

		--AutoFarm
		
		--This may be Broken
		local CurrentLevel = Player.PlayerData.Experience.Level
		local CurrentZone = Character.Location
		local CurrentNPC = nil
		local CurrentQuest = math.huge
		local CurrentLevelQuest = math.huge

		for i,v in pairs(workspace["NPC Zones"]:FindFirstChild(CurrentZone.Value).NPCS:GetChildren()) do
			if v:IsA("Model") then
				if v:FindFirstChild("Configuration").Level.Value <= CurrentLevel.Value then
					CurrentNPC = v.NPCName
				else
					--No Configuration, Level Found in NPC
				end
			end
		end

		if script.Parent.AutoFarm.Text == "AutoFarm = True" then
			if game.Players.LocalPlayer.PlayerGui.QuestGui.Enabled == false then
				for i,v in pairs(workspace["Npc_Workspace"].QuestGivers:GetChildren()) do
					if v.Configuration.Quests:FindFirstChildWhichIsA("Folder") then
						if v.Configuration.Quests:FindFirstChildWhichIsA("Folder"):FindFirstChildWhichIsA("Folder").Name == CurrentNPC.Value then
							CurrentQuest = v.Name
							CurrentLevelQuest = v.Configuration.Quests:FindFirstChildWhichIsA("Folder").Name
						end
					end
				end

				local args = {
					[1] = workspace:WaitForChild("Npc_Workspace"):WaitForChild("QuestGivers"):WaitForChild(CurrentQuest),
					[2] = CurrentLevelQuest
				}
				Player.PlayerGui.QuestGui:WaitForChild("QuestFunction"):InvokeServer(unpack(args))
			else
				for i,v in pairs(workspace["NPC Zones"]:FindFirstChild(CurrentZone.Value).NPCS:GetChildren()) do
					if v:IsA("Model") then
						if v:FindFirstChild("Configuration").Level.Value <= CurrentLevel.Value then
							if v.Humanoid.Health > 0 then
								if v:FindFirstChild("HumanoidRootPart") then
									local Offset = CFrame.new(0,0,16)
									Character.PrimaryPart.CFrame = v.HumanoidRootPart.CFrame * Offset
								else
									--No HumanoidRootPart
								end
							else
								--Dead NPC
							end
						else
							--No Configuration, Level Found in NPC
						end
					end
				end
			end
		end
	end
end
coroutine.wrap(NPKQ_fake_script)()
